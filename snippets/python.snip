snippet     class
abbr        class Class(...): ...
options     head
    class ${1:#:name}(${2}):
        def __init__(self, ${3}):
            ${0}

snippet     classd
abbr        class Class(...): "..."
options     head
    class ${1:#:name}(${2}):
        """${3:#:class documentation}"""
        def __init__(self, ${4}):
            """${5:#:__init__ documentation}"""
            ${0}

snippet     def
abbr        def function(...): ...
options     head
    def ${1:#:name}(${2}):
        ${0:TARGET}

snippet     defd
abbr        def function(...): """..."""
options     head
    def ${1:#:name}(${2}):
        """${3:#:function documentation}"""
        ${0:TARGET}

snippet     defm
abbr        def method(self, ...): ...
options     head
    def ${1:#:name}(self, ${2}):
        ${0:TARGET}

snippet     defmd
abbr        def method(self, ...): "..."
options     head
    def ${1:#:name}(self, ${2}):
        """${3:#:method documentation}"""
        ${0:TARGET}

snippet     elif
abbr        elif ...: ...
options     head
    elif ${1:#:condition}:
        ${0}

snippet     else
abbr        else: ...
options     head
    else:
        ${0}

snippet     fileidiom
abbr        with open()
options     head
    with open(${1:#:filename}, '${2:#:mode}') as ${3:f}:
        ${0:TARGET}

snippet     for
abbr        for ... in ...: ...
options     head
    for ${1:#:value} in ${2:#:list}:
        ${0:TARGET}

snippet     for-range
abbr        for ... in range(): ...
    for ${1:#:value} in range(${2:#:length}):
        ${0:TARGET}

snippet     if
abbr        if ...: ...
options     head
    if ${1:#:condition}:
        ${0:TARGET}

snippet     tryexcept
abbr        try: ... except ...: ...
options     head
    try:
        ${1:TARGET}
    except ${2:#:ExceptionClass}:
        ${3}

snippet     tryfinally
abbr        try: ... finally: ...
options     head
    try:
        ${1:TARGET}
    finally:
        ${2}

snippet     while
abbr        while ...: ...
options     head
    while ${1:#:condition}:
        ${0:TARGET}

snippet     with
abbr        with {func}({file}) as :
options     head
    with ${1:open}(${2:#:filename, mode}) as ${3:f}:
        ${0:TARGET}

snippet     with-json-load
alias       json-load
    with open(${1:#:filename}, 'r') as f:
        data = json.load(f)

snippet     with-json-dump
alias       json-dump
    with open(${1:#:filename}, 'w') as f:
        json.dump(data, f, indent=2, ensure_ascii=False)

snippet     list-inline
abbr        [x for x in {list} if {condition}]
    [$1 for ${1:x} in ${2:#:list}]

snippet     list-if
alias       filter
abbr        [x for x in {list} if {condition}]
    [$1 for ${1:x} in ${2:#:list} if ${3:#:condition}]

snippet     print
    print(${0:TARGET})

snippet     coding
abbr        # -*- coding ...
    # -*- coding: utf-8 -*-

snippet     getattr
abbr        getattr(..., ...)
    getattr(#:obj, #:attr)

snippet     setattr
abbr        setattr(..., ...)
    setattr(#:obj, #:attr)

snippet     pdb
abbr        import pdb..
    import pdb; pdb.set_trace()

snippet     ifmain
abbr        if __name__ == '__main__': ...
alias       main
options     head
    if __name__ == '__main__':
        ${0:TARGET}

snippet     helloworld
    # -*- coding: utf-8 -*-

    if __name__ == '__main__':
        print('helloworld')
